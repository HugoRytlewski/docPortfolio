ALTER FUNCTION [dbo].[CalculCle_Mont_Ref_Ech] (@p_base_calcul NVARCHAR(MAX))
RETURNS NVARCHAR(2)
AS
BEGIN
    DECLARE @i INT
    DECLARE @Cle INT
    DECLARE @Len INT
    DECLARE @Char NVARCHAR(1)
    DECLARE @HasNumber BIT
    DECLARE @Value INT

    SET @Cle = 0
    SET @Len = LEN(@p_base_calcul)
    SET @HasNumber = 0

    -- Table de conversion lettres => chiffres
    DECLARE @equival TABLE (Lettre CHAR(1), Valeur INT)
    INSERT INTO @equival (Lettre, Valeur)
    VALUES
    ('A',1), ('B',2), ('C',3), ('D',4), ('E',5), ('F',6), ('G',7), ('H',8), ('I',9),
    ('J',1), ('K',2), ('L',3), ('M',4), ('N',5), ('O',6), ('P',7), ('Q',8), ('R',9),
    ('S',2), ('T',3), ('U',4), ('V',5), ('W',6), ('X',7), ('Y',8), ('Z',9)

    SET @i = 1
    WHILE @i <= @Len
    BEGIN
        SET @Char = UPPER(SUBSTRING(@p_base_calcul, @Len - @i + 1, 1))

        IF @Char = '.' OR @Char = CHAR(9)
            RETURN NULL

        -- Vérifie si le caractère est un chiffre
        IF @Char LIKE '[0-9]'
        BEGIN
            SET @Value = CAST(@Char AS INT)
            SET @Cle = @Cle + (@i * @Value)
            SET @HasNumber = 1
        END
        -- Sinon, regarde s'il est dans la table de conversion
        ELSE IF EXISTS (SELECT 1 FROM @equival WHERE Lettre = @Char)
        BEGIN
            SELECT @Value = Valeur FROM @equival WHERE Lettre = @Char
            SET @Cle = @Cle + (@i * @Value)
            SET @HasNumber = 1
        END
        -- Si ce n’est ni un chiffre ni une lettre valide, retourne NULL
        ELSE
            RETURN NULL

        SET @i = @i + 1
    END

    IF @HasNumber = 0
        RETURN NULL

    SET @Cle = @Cle % 100

    RETURN RIGHT('00' + CAST(@Cle AS NVARCHAR(2)), 2)
END